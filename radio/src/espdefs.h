#pragma once

#define ESP_PACKET_TYPE_MSK 0x0F
#define ESP_PACKET_CMD_BIT 6
#define ESP_PACKET_ACK_BIT 7
#define ESP_PACKET_ISCMD(t) (t&(1<<ESP_PACKET_CMD_BIT))
#define ESP_PACKET_ISACKREQ(t) (t&(1<<ESP_PACKET_ACK_BIT))

enum ESPModes {
  ESP_ROOT,  
  ESP_TELEMETRY,
  ESP_TRAINER,
  ESP_JOYSTICK,
  ESP_AUDIO,
  ESP_FTP,
  ESP_IMU,
  ESP_MAX
};

enum ESPRootCmds {
  ESP_ROOTCMD_ACKNAK=0,
  ESP_ROOTCMD_START_MODE,
  ESP_ROOTCMD_STOP_MODE,
  ESP_ROOTCMD_RESTART,
  ESP_ROOTCMD_GET_VER,
  ESP_ROOTCMD_EVENT,
};

enum ESPTrainerCmds {
  ESP_TRAINERCMD_SET_MASTER,
  ESP_TRAINERCMD_SET_SLAVE,
};

enum ESPEvents {
  ESP_EVT_DISCOVER_STARTED,
  ESP_EVT_DISCOVER_COMPLETE,
  ESP_EVT_DEVICE_FOUND,
  ESP_EVT_CONNECTED,
  ESP_EVT_DISCONNECTED,
  ESP_EVT_PIN_REQUEST,
  ESP_EVT_IP_OBTAINED
};

struct ESPVersion {
  uint8_t maj;
  uint8_t min;
  uint8_t rev;
  uint8_t str[10];
};